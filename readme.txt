ETL процесс инкрементальной загрузки данных в формате 
SCD2 в DWH и построение отчета для выявления мошеннических операций

Программный стек:
Python(psycopg2, os, re, datetime, pandas), PostgreSQL

Процесс обеспечивает инкрементальную загрузку данных о картах, счетах 
и клиентах хранящуюся в СУБД PostgreSQL в DWH, а также загрузку 
дополнительной актуальной информации из файлов:
1. Список транзакций за текущий день. Формат – CSV
2. Список терминалов полным срезом. Формат – XLSX
3. Список паспортов, включенных в «черный список» - с накоплением с
начала месяца. Формат – XLSX

По результатам загрузки ежедневно необходимо строить витрину
отчетности по мошенническим операциям. Витрина строится накоплением,
каждый новый отчет укладывается в эту же таблицу с новым report_dt:
1. Совершение операции при просроченном или заблокированном паспорте.
2. Совершение операции при недействующем договоре.
3. Совершение операций в разных городах в течение одного часа.
4. Попытка подбора суммы. В течение 20 минут проходит более 3х операций
со следующим шаблоном – каждая последующая меньше предыдущей, при этом
отклонены все кроме последней. Последняя операция (успешная) в такой цепочке
считается мошеннической.

Модули:
1. main.ddl	- DDL для построения DWH
2. main.cron	- файл запуска ETL процесса в формате crontab
3. main.py	- скрипт для подключения к БД и вызова модуля logics.py
4. logics.py	- модуль для упраления логикой процесса загрузки и обработки 
                  данных в БД вызывает функции модулей: downloads.py и events.py
5. downloads.py	- производит инкрементальную загрузку данных в DWH в формате SCD2 из
                  разных источников
6. events.py	- производит выявление заданных мошеннических операций и построение
                  отчета
